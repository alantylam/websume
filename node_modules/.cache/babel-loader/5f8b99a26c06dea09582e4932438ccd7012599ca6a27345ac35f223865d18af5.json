{"ast":null,"code":"import{useCallback,useEffect,useState}from\"react\";import{SvgIcon}from\"../SvgIcon\";import{ScrollUpContainer}from\"./styles\";import{jsx as _jsx}from\"react/jsx-runtime\";const ScrollToTop=()=>{const[showScroll,setShowScroll]=useState(false);const checkScrollTop=useCallback(()=>{const offsetFromTop=window.scrollY;if(!showScroll&&offsetFromTop>350){setShowScroll(true);}else if(offsetFromTop<=350){setShowScroll(false);}},[showScroll]);useEffect(()=>{window.addEventListener(\"scroll\",checkScrollTop);return()=>{window.removeEventListener(\"scroll\",checkScrollTop);};},[checkScrollTop]);const scrollUp=()=>{const element=document.getElementById(\"intro\");element.scrollIntoView({behavior:\"smooth\",block:\"end\",inline:\"nearest\"});};return/*#__PURE__*/_jsx(ScrollUpContainer,{onClick:scrollUp,show:showScroll,children:/*#__PURE__*/_jsx(SvgIcon,{src:\"scroll-top.svg\",width:\"20px\",height:\"20px\"})});};export default ScrollToTop;","map":{"version":3,"names":["useCallback","useEffect","useState","SvgIcon","ScrollUpContainer","jsx","_jsx","ScrollToTop","showScroll","setShowScroll","checkScrollTop","offsetFromTop","window","scrollY","addEventListener","removeEventListener","scrollUp","element","document","getElementById","scrollIntoView","behavior","block","inline","onClick","show","children","src","width","height"],"sources":["/Users/alanlam/Documents/GitHub/websume/src/common/ScrollToTop/index.tsx"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\r\nimport { SvgIcon } from \"../SvgIcon\";\r\nimport { ScrollUpContainer } from \"./styles\";\r\n\r\nconst ScrollToTop = () => {\r\n  const [showScroll, setShowScroll] = useState(false);\r\n\r\n  const checkScrollTop = useCallback(() => {\r\n    const offsetFromTop = window.scrollY;\r\n\r\n    if (!showScroll && offsetFromTop > 350) {\r\n      setShowScroll(true);\r\n    } else if (offsetFromTop <= 350) {\r\n      setShowScroll(false);\r\n    }\r\n  }, [showScroll]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", checkScrollTop);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", checkScrollTop);\r\n    };\r\n  }, [checkScrollTop]);\r\n\r\n  const scrollUp = () => {\r\n    const element = document.getElementById(\"intro\") as HTMLDivElement;\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n      block: \"end\",\r\n      inline: \"nearest\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ScrollUpContainer onClick={scrollUp} show={showScroll}>\r\n      <SvgIcon src=\"scroll-top.svg\" width=\"20px\" height=\"20px\" />\r\n    </ScrollUpContainer>\r\n  );\r\n};\r\n\r\nexport default ScrollToTop;\r\n"],"mappings":"AAAA,OAASA,WAAW,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CACxD,OAASC,OAAO,KAAQ,YAAY,CACpC,OAASC,iBAAiB,KAAQ,UAAU,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE7C,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGP,QAAQ,CAAC,KAAK,CAAC,CAEnD,KAAM,CAAAQ,cAAc,CAAGV,WAAW,CAAC,IAAM,CACvC,KAAM,CAAAW,aAAa,CAAGC,MAAM,CAACC,OAAO,CAEpC,GAAI,CAACL,UAAU,EAAIG,aAAa,CAAG,GAAG,CAAE,CACtCF,aAAa,CAAC,IAAI,CAAC,CACrB,CAAC,IAAM,IAAIE,aAAa,EAAI,GAAG,CAAE,CAC/BF,aAAa,CAAC,KAAK,CAAC,CACtB,CACF,CAAC,CAAE,CAACD,UAAU,CAAC,CAAC,CAEhBP,SAAS,CAAC,IAAM,CACdW,MAAM,CAACE,gBAAgB,CAAC,QAAQ,CAAEJ,cAAc,CAAC,CACjD,MAAO,IAAM,CACXE,MAAM,CAACG,mBAAmB,CAAC,QAAQ,CAAEL,cAAc,CAAC,CACtD,CAAC,CACH,CAAC,CAAE,CAACA,cAAc,CAAC,CAAC,CAEpB,KAAM,CAAAM,QAAQ,CAAGA,CAAA,GAAM,CACrB,KAAM,CAAAC,OAAO,CAAGC,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAmB,CAClEF,OAAO,CAACG,cAAc,CAAC,CACrBC,QAAQ,CAAE,QAAQ,CAClBC,KAAK,CAAE,KAAK,CACZC,MAAM,CAAE,SACV,CAAC,CAAC,CACJ,CAAC,CAED,mBACEjB,IAAA,CAACF,iBAAiB,EAACoB,OAAO,CAAER,QAAS,CAACS,IAAI,CAAEjB,UAAW,CAAAkB,QAAA,cACrDpB,IAAA,CAACH,OAAO,EAACwB,GAAG,CAAC,gBAAgB,CAACC,KAAK,CAAC,MAAM,CAACC,MAAM,CAAC,MAAM,CAAE,CAAC,CAC1C,CAAC,CAExB,CAAC,CAED,cAAe,CAAAtB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}