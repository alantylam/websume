{"ast":null,"code":"import{useState}from\"react\";import{notification}from\"antd\";const initialValues={name:\"\",email:\"\",message:\"\"};export const useForm=validate=>{const[formState,setFormState]=useState({values:{...initialValues},errors:{...initialValues}});const handleSubmit=async event=>{event.preventDefault();const values=formState.values;const errors=validate(values);setFormState(prevState=>({...prevState,errors}));const url=\"\";// Fill in your API URL here\ntry{if(Object.values(errors).every(error=>error===\"\")){const response=await fetch(url,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(values)});if(!response.ok){notification[\"error\"]({message:\"Error\",description:\"There was an error sending your message, please try again later.\"});}else{event.target.reset();setFormState(()=>({values:{...initialValues},errors:{...initialValues}}));notification[\"success\"]({message:\"Success\",description:\"Your message has been sent!\"});}}}catch(error){notification[\"error\"]({message:\"Error\",description:\"Failed to submit form. Please try again later.\"});}};const handleChange=event=>{event.persist();const{name,value}=event.target;setFormState(prevState=>({...prevState,values:{...prevState.values,[name]:value},errors:{...prevState.errors,[name]:\"\"}}));};return{handleChange,handleSubmit,values:formState.values,errors:formState.errors};};","map":{"version":3,"names":["useState","notification","initialValues","name","email","message","useForm","validate","formState","setFormState","values","errors","handleSubmit","event","preventDefault","prevState","url","Object","every","error","response","fetch","method","headers","body","JSON","stringify","ok","description","target","reset","handleChange","persist","value"],"sources":["/Users/alanlam/Documents/GitHub/websume/src/common/utils/useForm.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { notification } from \"antd\";\r\n\r\ninterface IValues {\r\n  name: string;\r\n  email: string;\r\n  message: string;\r\n}\r\n\r\nconst initialValues: IValues = {\r\n  name: \"\",\r\n  email: \"\",\r\n  message: \"\",\r\n};\r\n\r\nexport const useForm = (validate: { (values: IValues): IValues }) => {\r\n  const [formState, setFormState] = useState<{\r\n    values: IValues;\r\n    errors: IValues;\r\n  }>({\r\n    values: { ...initialValues },\r\n    errors: { ...initialValues },\r\n  });\r\n\r\n  const handleSubmit = async (event: React.ChangeEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    const values = formState.values;\r\n    const errors = validate(values);\r\n    setFormState((prevState) => ({ ...prevState, errors }));\r\n\r\n    const url = \"\"; // Fill in your API URL here\r\n\r\n    try {\r\n      if (Object.values(errors).every((error) => error === \"\")) {\r\n        const response = await fetch(url, {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(values),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          notification[\"error\"]({\r\n            message: \"Error\",\r\n            description:\r\n              \"There was an error sending your message, please try again later.\",\r\n          });\r\n        } else {\r\n          event.target.reset();\r\n          setFormState(() => ({\r\n            values: { ...initialValues },\r\n            errors: { ...initialValues },\r\n          }));\r\n\r\n          notification[\"success\"]({\r\n            message: \"Success\",\r\n            description: \"Your message has been sent!\",\r\n          });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      notification[\"error\"]({\r\n        message: \"Error\",\r\n        description: \"Failed to submit form. Please try again later.\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChange = (\r\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    event.persist();\r\n    const { name, value } = event.target;\r\n    setFormState((prevState) => ({\r\n      ...prevState,\r\n      values: {\r\n        ...prevState.values,\r\n        [name]: value,\r\n      },\r\n      errors: {\r\n        ...prevState.errors,\r\n        [name]: \"\",\r\n      },\r\n    }));\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values: formState.values,\r\n    errors: formState.errors,\r\n  };\r\n};\r\n"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,OAASC,YAAY,KAAQ,MAAM,CAQnC,KAAM,CAAAC,aAAsB,CAAG,CAC7BC,IAAI,CAAE,EAAE,CACRC,KAAK,CAAE,EAAE,CACTC,OAAO,CAAE,EACX,CAAC,CAED,MAAO,MAAM,CAAAC,OAAO,CAAIC,QAAwC,EAAK,CACnE,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGT,QAAQ,CAGvC,CACDU,MAAM,CAAE,CAAE,GAAGR,aAAc,CAAC,CAC5BS,MAAM,CAAE,CAAE,GAAGT,aAAc,CAC7B,CAAC,CAAC,CAEF,KAAM,CAAAU,YAAY,CAAG,KAAO,CAAAC,KAAyC,EAAK,CACxEA,KAAK,CAACC,cAAc,CAAC,CAAC,CACtB,KAAM,CAAAJ,MAAM,CAAGF,SAAS,CAACE,MAAM,CAC/B,KAAM,CAAAC,MAAM,CAAGJ,QAAQ,CAACG,MAAM,CAAC,CAC/BD,YAAY,CAAEM,SAAS,GAAM,CAAE,GAAGA,SAAS,CAAEJ,MAAO,CAAC,CAAC,CAAC,CAEvD,KAAM,CAAAK,GAAG,CAAG,EAAE,CAAE;AAEhB,GAAI,CACF,GAAIC,MAAM,CAACP,MAAM,CAACC,MAAM,CAAC,CAACO,KAAK,CAAEC,KAAK,EAAKA,KAAK,GAAK,EAAE,CAAC,CAAE,CACxD,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACL,GAAG,CAAE,CAChCM,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAChB,MAAM,CAC7B,CAAC,CAAC,CAEF,GAAI,CAACU,QAAQ,CAACO,EAAE,CAAE,CAChB1B,YAAY,CAAC,OAAO,CAAC,CAAC,CACpBI,OAAO,CAAE,OAAO,CAChBuB,WAAW,CACT,kEACJ,CAAC,CAAC,CACJ,CAAC,IAAM,CACLf,KAAK,CAACgB,MAAM,CAACC,KAAK,CAAC,CAAC,CACpBrB,YAAY,CAAC,KAAO,CAClBC,MAAM,CAAE,CAAE,GAAGR,aAAc,CAAC,CAC5BS,MAAM,CAAE,CAAE,GAAGT,aAAc,CAC7B,CAAC,CAAC,CAAC,CAEHD,YAAY,CAAC,SAAS,CAAC,CAAC,CACtBI,OAAO,CAAE,SAAS,CAClBuB,WAAW,CAAE,6BACf,CAAC,CAAC,CACJ,CACF,CACF,CAAE,MAAOT,KAAK,CAAE,CACdlB,YAAY,CAAC,OAAO,CAAC,CAAC,CACpBI,OAAO,CAAE,OAAO,CAChBuB,WAAW,CAAE,gDACf,CAAC,CAAC,CACJ,CACF,CAAC,CAED,KAAM,CAAAG,YAAY,CAChBlB,KAAgE,EAC7D,CACHA,KAAK,CAACmB,OAAO,CAAC,CAAC,CACf,KAAM,CAAE7B,IAAI,CAAE8B,KAAM,CAAC,CAAGpB,KAAK,CAACgB,MAAM,CACpCpB,YAAY,CAAEM,SAAS,GAAM,CAC3B,GAAGA,SAAS,CACZL,MAAM,CAAE,CACN,GAAGK,SAAS,CAACL,MAAM,CACnB,CAACP,IAAI,EAAG8B,KACV,CAAC,CACDtB,MAAM,CAAE,CACN,GAAGI,SAAS,CAACJ,MAAM,CACnB,CAACR,IAAI,EAAG,EACV,CACF,CAAC,CAAC,CAAC,CACL,CAAC,CAED,MAAO,CACL4B,YAAY,CACZnB,YAAY,CACZF,MAAM,CAAEF,SAAS,CAACE,MAAM,CACxBC,MAAM,CAAEH,SAAS,CAACG,MACpB,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}